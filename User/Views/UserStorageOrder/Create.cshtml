@model User.Models.ViewModel.UserStorageViewModel

@{
    ViewData["Title"] = "Tạo Đơn Hàng Mới";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />

<style>
    body {
        background-color: #f8f9fc;
    }

    .form-section {
        background-color: #fefefe;
        padding: 2rem;
        border-radius: 16px;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.06);
        margin-bottom: 2rem;
        border-left: 5px solid #32ADE6;
    }

        .form-section h4 {
            margin-bottom: 1.5rem;
            font-weight: 600;
            color: #2e2e2e;
            border-bottom: 1px solid #e0e0e0;
            padding-bottom: 10px;
        }

    .form-control,
    .form-select {
        border-radius: 10px;
    }

    .btn-primary {
        padding: 10px 24px;
        font-weight: 500;
        border-radius: 10px;
        background-color: #4e73df;
        border-color: #4e73df;
    }

        .btn-primary:hover {
            background-color: #2e59d9;
            border-color: #2653d4;
        }

    .btn-secondary {
        margin-left: 10px;
        border-radius: 10px;
    }

    .image-preview-container {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-top: 10px;
    }

    .image-preview-box {
        position: relative;
        border: 2px solid #4e73df;
        border-radius: 10px;
        overflow: hidden;
        width: 140px;
        height: 110px;
    }

        .image-preview-box img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .image-preview-box button {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 0, 0, 0.8);
            border: none;
            color: white;
            border-radius: 50%;
            width: 22px;
            height: 22px;
            font-size: 14px;
            cursor: pointer;
        }

            .image-preview-box button:hover {
                background-color: red;
            }
</style>

<h2 class="mb-4"><i class="fas fa-plus-circle"></i> Tạo Đơn Hàng Mới</h2>

<form asp-controller="UserStorageOrder" asp-action="Create"
      enctype="multipart/form-data"
      method="post"
      class="needs-validation"
      novalidate>
    <div class="form-section">
        <h4><i class="fas fa-info-circle"></i> Thông Tin Đơn Hàng</h4>
        <div class="row">
            <div class="col-md-4 mb-3">
                <label asp-for="OrderDate" class="form-label"></label>
                <input asp-for="OrderDate"
                       class="form-control"
                       type="datetime-local"
                       readonly
                       value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
            </div>
            <div class="col-md-4 mb-3">
                <label asp-for="DateOfEntry" class="form-label"></label>
                <input asp-for="DateOfEntry"
                       class="form-control"
                       type="datetime-local"
                       id="DateOfEntry"
                       required />
                <div class="invalid-feedback"></div>
            </div>
            <div class="col-md-4 mb-3">
                <label asp-for="DateOfShipment" class="form-label"></label>
                <input asp-for="DateOfShipment"
                       class="form-control"
                       type="datetime-local"
                       id="DateOfShipment"
                       required />
                <div class="invalid-feedback"></div>
            </div>
        </div>
    </div>

    <div class="form-section">
        <h4><i class="fas fa-box"></i> Thông Tin Hàng Hóa</h4>
        <div class="row">
            <div class="col-md-4 mb-3">
                <label asp-for="TypeOfGoods" class="form-label"></label>
                <select asp-for="TypeOfGoods"
                        asp-items="Html.GetEnumSelectList<TypeOfGoods>()"
                        class="form-select"></select>
            </div>
            <div class="col-md-4 mb-3">
                <label asp-for="Quantity" class="form-label"></label>
                <input asp-for="Quantity"
                       class="form-control"
                       type="number"
                       id="Quantity"
                       min="1"
                       required />
                <div class="invalid-feedback"></div>
            </div>
        </div>
    </div>

    <div class="form-section">
        <h4><i class="fas fa-image"></i> Hình Ảnh Đính Kèm</h4>
        <div class="mb-3">
            <label asp-for="ImageFiles" class="form-label"></label>
            <input asp-for="ImageFiles"
                   class="form-control"
                   type="file"
                   id="ImageFiles"
                   multiple
                   accept="image/*"
                   required
                   onchange="previewImages(event)" />
            <div class="invalid-feedback"></div>
        </div>
        <div class="image-preview-container" id="imagePreviewContainer"></div>
    </div>

    <div class="mt-4">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-paper-plane"></i> Tạo Đơn Hàng
        </button>
        <a asp-action="MyOrders" class="btn btn-secondary">Hủy</a>
    </div>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        // Preview hình ảnh
        function previewImages(event) {
            const previewContainer = document.getElementById("imagePreviewContainer");
            previewContainer.innerHTML = "";

            Array.from(event.target.files).forEach(file => {
                const reader = new FileReader();
                reader.onload = e => {
                    const box = document.createElement("div");
                    box.className = "image-preview-box";

                    const img = document.createElement("img");
                    img.src = e.target.result;

                    const btn = document.createElement("button");
                    btn.innerHTML = "&times;";
                    btn.onclick = () => box.remove();

                    box.append(img, btn);
                    previewContainer.append(box);
                };
                reader.readAsDataURL(file);
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('.needs-validation');
            const dateEntryInput = document.getElementById('DateOfEntry');
            const dateShipmentInput = document.getElementById('DateOfShipment');
            const quantityInput = document.getElementById('Quantity');
            const imageInput = document.getElementById('ImageFiles');

            // Đặt min cho date inputs thành thời điểm hiện tại
            const nowIso = new Date().toISOString().slice(0, 16);
            dateEntryInput.min = nowIso;
            dateShipmentInput.min = nowIso;

            form.addEventListener('submit', function (event) {
                // Reset custom validity
                [dateEntryInput, dateShipmentInput, quantityInput, imageInput]
                    .forEach(el => el.setCustomValidity(''));

                const now = new Date();
                const ent = new Date(dateEntryInput.value);
                const shp = new Date(dateShipmentInput.value);
                const qty = parseInt(quantityInput.value, 10);
                const files = imageInput.files;

                // Validate bằng JS
                if (ent < now)
                    dateEntryInput.setCustomValidity('Ngày nhập không được trước hiện tại.');
                if (shp < now)
                    dateShipmentInput.setCustomValidity('Ngày giao không được trước hiện tại.');
                if (shp < ent)
                    dateShipmentInput.setCustomValidity('Ngày giao phải sau hoặc bằng ngày nhập.');
                if (!qty || qty < 1)
                    quantityInput.setCustomValidity('Số lượng phải lớn hơn 0.');
                if (!files.length)
                    imageInput.setCustomValidity('Phải chọn ít nhất 1 hình ảnh.');

                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    </script>
}
